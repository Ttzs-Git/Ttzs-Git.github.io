<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HDU 100:两个月挑战</title>
    <url>/2025/05/08/HDU-100-%E4%B8%A4%E4%B8%AA%E6%9C%88%E6%8C%91%E6%88%98/</url>
    <content><![CDATA[<h2 id="情况"><a href="#情况" class="headerlink" title="情况"></a>情况</h2><p>大一学了C++的基础知识和极其少的stl内容，没学数据结构与算法</p>
<p>刷HDU的2000-2099 检测一下C++的情况</p>
<p>每天**1.5h(3~4题)**的刷题,以及不限制限制时间的反思</p>
<p><strong>半个小时，不会就跳，结束后复盘</strong></p>
<p><strong>我的代码仓库:<a class="link"   href="https://github.com/Ttzs-Git/learning-logs/" >https://github.com/Ttzs-Git/learning-logs/<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></strong></p>
<p>具体位置: &#x2F;learning-CPP-language&#x2F;cpp-algo</p>
<h2 id="可能常用网站"><a href="#可能常用网站" class="headerlink" title="可能常用网站"></a>可能常用网站</h2><p><a class="link"   href="https://acm.hdu.edu.cn/listproblem.php?vol=11" >HDU OJ<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<p><a class="link"   href="https://blog.csdn.net/m0_62434776/article/details/125602451" >题解1<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<p><a class="link"   href="https://blog.csdn.net/qq_38687678/article/details/83012480" >题解2<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h2 id="解题反思"><a href="#解题反思" class="headerlink" title="解题反思"></a>解题反思</h2><h3 id="HDU-2000"><a href="#HDU-2000" class="headerlink" title="HDU 2000"></a>HDU 2000</h3><p>我的代码中主要使用sort和vector，因此思路很简单。</p>
<ul>
<li>题解1:使用冒泡排序(问题: 感觉写的比较死,无法支持数量改变的数据)，不过正好练习一下<strong>冒泡排序</strong>的代码</li>
<li>两个题解都是用数组写的</li>
<li>题解2:EOF对HDU 2003挺重要的</li>
</ul>
<h3 id="HDU-2001"><a href="#HDU-2001" class="headerlink" title="HDU 2001"></a>HDU 2001</h3><p>我的代码主要使用vector和sqrt写的，</p>
<p>本题的关键点:<strong>题目中提示四个实数</strong></p>
<ul>
<li><p>题解1: 使用的cin&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d—-这让我思考一个问题;<strong>是否全部的输入结束以后才能开始输出？</strong></p>
</li>
<li><p>题解2:使用scanf的返回值是输入值的个数，也可以用在HDU 2003</p>
</li>
<li><p>小数点后的位数使用printf的格式化控制比较简单</p>
</li>
</ul>
<h3 id="HDU-2002"><a href="#HDU-2002" class="headerlink" title="HDU 2002"></a>HDU 2002</h3><p>本题的关键: <strong>整数整除和float，double的测试</strong></p>
<p>注意:</p>
<ul>
<li>4&#x2F;3&#x3D;1;—给忘记了</li>
</ul>
<h3 id="HDU-2003"><a href="#HDU-2003" class="headerlink" title="HDU 2003"></a>HDU 2003</h3><ul>
<li>题解一: 提醒使用abs函数</li>
</ul>
<h3 id="HDU-2004"><a href="#HDU-2004" class="headerlink" title="HDU 2004"></a>HDU 2004</h3><ul>
<li>题解二: 字符数组挺不错的，可以代替冗长的switch</li>
</ul>
<h3 id="HDU-2005"><a href="#HDU-2005" class="headerlink" title="HDU 2005"></a>HDU 2005</h3><ul>
<li>题解一二: 冗长的switch可以使用数组代替</li>
</ul>
<h3 id="HDU-2006"><a href="#HDU-2006" class="headerlink" title="HDU 2006"></a>HDU 2006</h3><ul>
<li>题解一:使用num&amp;1判断奇数</li>
</ul>
<h3 id="HDU-2007"><a href="#HDU-2007" class="headerlink" title="HDU 2007"></a>HDU 2007</h3><p>由于没有评测机，所以只能使用样例。发现自己忽略了x和y的大小关系</p>
<ul>
<li>题解一:使用swap</li>
</ul>
<h3 id="HDU-2008"><a href="#HDU-2008" class="headerlink" title="HDU 2008"></a>HDU 2008</h3><ul>
<li>题解一: #include&lt;bits&#x2F;stdc++.h&gt;</li>
<li>题解二: 将t&#x3D;&#x3D;0的判断放到while中</li>
</ul>
<h3 id="HDU-2012"><a href="#HDU-2012" class="headerlink" title="HDU 2012"></a>HDU 2012</h3><ul>
<li>题解一: !(x&#x3D;=0&amp;&amp;y&#x3D;&#x3D;0)等价于x!&#x3D;0||y!&#x3D;0</li>
</ul>
<h3 id="HDU-2014"><a href="#HDU-2014" class="headerlink" title="HDU 2014"></a>HDU 2014</h3><p>我的思路简单: 先输入数据，然后排序，然后计算</p>
<ul>
<li>题解二: 找出最大值和最小值</li>
</ul>
<h3 id="HDU-2015"><a href="#HDU-2015" class="headerlink" title="HDU 2015"></a>HDU 2015</h3><p>推荐题解一的代码更加简洁明了。两份题解对我的起始，不要一味最求生成向量–计算–输出的思路。同时，生成的的代码也较复杂。复现题解一</p>
<h3 id="HDU-2018"><a href="#HDU-2018" class="headerlink" title="HDU 2018"></a>HDU 2018</h3><p>我的题解是使用递归写的，n&lt;&#x3D;4,输出原值，n&gt;5，递归</p>
<ul>
<li>题解1: 把n&lt;56的全部存到一个数组中，当n较大时，递归可能会太深</li>
<li>题解2: 不储存数据的迭代</li>
</ul>
<h3 id="HDU-2019"><a href="#HDU-2019" class="headerlink" title="HDU 2019"></a>HDU 2019</h3><p>0x3f3f3f3f-表示无穷大的数,凄凉被不超过int</p>
<ul>
<li>题解1: 使用m-无穷大,类似于标签—我改变了一下，在仓库中</li>
</ul>
<p>它的题解的输入和输出如下时，无法通过<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="D:\github\Ttzs-Git.github.io\source_posts\HDU-100-两个月挑战\image-20250509232346551.png"
                      alt="image-20250509232346551"
                ></p>
<p>但是HDU oj中没有这个案例，是不是不需要考虑这种情况？</p>
<h3 id="HDU-2020"><a href="#HDU-2020" class="headerlink" title="HDU 2020"></a>HDU 2020</h3><ul>
<li>题解12:提醒sort(…,cmp)自定义部分</li>
</ul>
<h3 id="HDU-2021"><a href="#HDU-2021" class="headerlink" title="HDU 2021"></a>HDU 2021</h3><p>我的思路很朴素: 先换大的，再换小的</p>
<ul>
<li>题解2: 使用数组和循环避免了我的超长部分(使用**&#x2F;和***)</li>
</ul>
<h3 id="HDU-2023"><a href="#HDU-2023" class="headerlink" title="HDU 2023"></a>HDU 2023</h3><p>我的痛，在这儿卡了好久，感觉思路没有啥问题，但是g++编译器过不了。最后全部用vector写的，C++编译器过了</p>
<p>感悟:</p>
<ul>
<li>写标准的C++语法，不适用变长数组</li>
</ul>
<h3 id="HDU-2024"><a href="#HDU-2024" class="headerlink" title="HDU 2024"></a>HDU 2024</h3><p>题解一二都没考虑标识符不能是关键字。</p>
<h3 id="HDU-2025"><a href="#HDU-2025" class="headerlink" title="HDU 2025"></a>HDU 2025</h3><p>推荐len来做,推荐使用for的auto &amp;st:string</p>
<h3 id="HDU-2026"><a href="#HDU-2026" class="headerlink" title="HDU 2026"></a>HDU 2026</h3><ul>
<li>题解一: i !&#x3D; 0 &amp;&amp; s[i - 1] &#x3D;&#x3D; ‘ ‘–值得我学习</li>
</ul>
<h3 id="HDU-2027"><a href="#HDU-2027" class="headerlink" title="HDU 2027"></a>HDU 2027</h3><p>注意getchar()放在循环体内还循环体外的区别</p>
<h3 id="HDU-2028"><a href="#HDU-2028" class="headerlink" title="HDU 2028"></a>HDU 2028</h3><p>关键在于 <strong>long long</strong></p>
<ul>
<li>题解一: #define int long long</li>
</ul>
<h3 id="HDU-2030"><a href="#HDU-2030" class="headerlink" title="HDU 2030"></a>HDU 2030</h3><p>汉字编码的时候字节首位是1，即&lt;0;</p>
<p>我的电脑汉字占用3个字节，评测机是2个字节</p>
<h3 id="HDU-2031"><a href="#HDU-2031" class="headerlink" title="HDU 2031"></a>HDU 2031</h3><ul>
<li>题解一: 栈+递归</li>
</ul>
<h3 id="HDU-2032"><a href="#HDU-2032" class="headerlink" title="HDU 2032"></a>HDU 2032</h3><ul>
<li>题解一二: 暴力生成，然后按照指示输出</li>
</ul>
<h3 id="HDU-2033"><a href="#HDU-2033" class="headerlink" title="HDU 2033"></a>HDU 2033</h3><ul>
<li>题解1: 使用取余和整除写得太好了</li>
</ul>
<h3 id="HDU-2034"><a href="#HDU-2034" class="headerlink" title="HDU 2034"></a>HDU 2034</h3><ul>
<li>题解一: 没有使用set2节省内存；学习了set的用法</li>
<li>题解二: 开了一个新的数组，存放A-B的结果</li>
</ul>
<h3 id="HDU-2035"><a href="#HDU-2035" class="headerlink" title="HDU 2035"></a>HDU 2035</h3><ul>
<li>题解一: 使* 和 % 进行迭代，非常简洁的</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="条件输入"><a href="#条件输入" class="headerlink" title="条件输入"></a>条件输入</h3><ul>
<li><p>cin&gt;&gt;a</p>
</li>
<li><p>scanf(“…”)&#x3D;&#x3D;EOF</p>
</li>
</ul>
<h3 id="printf和cout"><a href="#printf和cout" class="headerlink" title="printf和cout"></a>printf和cout</h3><ul>
<li>printf:非常适合指定小数点后位数的输出</li>
<li>cout:非常合适简单的输出</li>
</ul>
<h3 id="cin和scanf"><a href="#cin和scanf" class="headerlink" title="cin和scanf"></a>cin和scanf</h3><ul>
<li>cin:非常适合简单的输入，作为while的输入</li>
<li>scanf:非常适合有指定格式的输入</li>
</ul>
<h3 id="set"><a href="#set" class="headerlink" title="set"></a>set</h3><p>set的抽象含义: 一个<strong>自动排序</strong>且<strong>不含重复元素</strong>的容器</p>
<p>set的访问: 仅支持迭代器的使用且不支持&lt; &gt;等元素符号</p>
]]></content>
      <tags>
        <tag>算法刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2025/03/25/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
]]></content>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title>test</title>
    <url>/2025/05/07/test/</url>
    <content><![CDATA[<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
]]></content>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title>how to study 1</title>
    <url>/2025/03/26/how-to-study-1/</url>
    <content><![CDATA[<p>Actually,I don’t know how to study. When I study CS61A and meet some problems which I can’t solve it quickly, I will feel irritable. Perhaps for my characters, it is quick to study from 0 to 1 due to interest. But, the subsequent courses are difficult and hard to stay clam to study them. </p>
<p>So, I determined to change it by some ways and write here to be a reminder for me.</p>
<ul>
<li><p>First of all ,i shouldn’t care too much about whether to learn all the courses for perfectionism and choose what is suitable for me. <strong>What matters is that learn the knowledge all not the courses all</strong> .</p>
</li>
<li><p>Secondly,to improve the efficiency of learning , <strong>read the preview materials</strong> before studying specially the CS. If I can <strong>finish the homework or lab</strong> <strong>or discussion well</strong>, it means I can skip this lesson. If it is hard for me to read it ,why not listen to it obediently?</p>
</li>
<li><p>Thirdly, how to learn by book ,read it ,rewrite the codes,try to change it ,and finally finish the practices.</p>
</li>
</ul>
<p>Someone perhaps ask me if i still be unknown to this knowledge after learning the course. It is useful for us to ask GAI like QwQ and so on.</p>
<p>It is a good choice to select a major course until you learn it down.</p>
<p>Hope you and me have a good studying experience.</p>
<p>Good luck! </p>
]]></content>
      <tags>
        <tag>Misc-talk</tag>
      </tags>
  </entry>
  <entry>
    <title>Mathematical Model:Summary</title>
    <url>/2025/05/11/Mathematical-Model-Summary/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于正在学习数学模型，稍微记录一些总结，在文章的最后给出学习的资料。给出学习资料和学习的感想是我博客的特点。</p>
<h2 id="评价类模型"><a href="#评价类模型" class="headerlink" title="评价类模型"></a>评价类模型</h2><h3 id="整体框架"><a href="#整体框架" class="headerlink" title="整体框架"></a>整体框架</h3><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="D:\github\Ttzs-Git.github.io\source_posts\Mathematical-Model-Summary\image-20250511195818535.png"
                      alt="image-20250511195818535"
                ></p>
<p>评价模型希望从一堆方案中找到一个方案。通过<strong>正向化和标准化</strong>数据，我们期望得到<strong>分数最高</strong>的方案。</p>
<p>我们关心的是目标层和准则层之间的<strong>权重</strong>，方案层和准则层之间的<strong>初始分数</strong>，最终得到评分。</p>
<h3 id="层次分析法–主观权重"><a href="#层次分析法–主观权重" class="headerlink" title="层次分析法–主观权重"></a>层次分析法–主观权重</h3><p>层次分析法在<strong>缺少数据</strong>的情况下，通过<strong>分而治之</strong>的思想，将<strong>两两比较</strong>得出<strong>权重或者分数</strong></p>
<p>比较重要的内容如下:</p>
<ul>
<li><strong>一致矩阵的判定与调整</strong></li>
<li><strong>通过四种方法计算权重</strong></li>
</ul>
<p>缺陷:</p>
<ul>
<li>仅支持少量的数据的比较</li>
<li>对拥有数据的指标比较不准确</li>
</ul>
<h3 id="熵权法—客观权重"><a href="#熵权法—客观权重" class="headerlink" title="熵权法—客观权重"></a>熵权法—客观权重</h3><p>熵权法根据已有的数据，利用数据分布，计算信息熵，再归一化为权重</p>
<p>比较重要的内容:</p>
<ul>
<li>标准化化的方式</li>
<li>计算信息熵</li>
</ul>
<h3 id="TOPSIS法—计算得分"><a href="#TOPSIS法—计算得分" class="headerlink" title="TOPSIS法—计算得分"></a>TOPSIS法—计算得分</h3><p>TOPSIS是在拥有数据的情况下，充分利用数据和权重，计算最大最小值距离的一种方法</p>
<p>关键内容如下:</p>
<ul>
<li>对数据的正向化处理</li>
<li>最大值最小距离的计算</li>
</ul>
]]></content>
      <tags>
        <tag>数学模型</tag>
      </tags>
  </entry>
  <entry>
    <title>博客优化</title>
    <url>/2025/05/07/%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h3><p>要求: 在该状态下希望使用免费的CDN</p>
<p>参考内容:</p>
<p><a class="link"   href="https://adaning.github.io/posts/42790.html#toc-heading-9" >Hexo博客优化<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<p><a class="link"   href="https://www.jsdelivr.com/" >jsDelivr<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h3 id="图片插入"><a href="#图片插入" class="headerlink" title="图片插入"></a>图片插入</h3><h4 id="一般文章的Typora的图片插入"><a href="#一般文章的Typora的图片插入" class="headerlink" title="一般文章的Typora的图片插入"></a>一般文章的Typora的图片插入</h4><p>参考文献:</p>
<p><a class="link"   href="https://yunjic.cn/2023/07/29/Hexo%E6%9B%B4%E4%BC%98%E9%9B%85%E7%9A%84%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5%E6%96%B9%E5%BC%8F/" >Hexo更优雅的图片插入方式<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></p>
<h4 id="网络地址logo图片"><a href="#网络地址logo图片" class="headerlink" title="网络地址logo图片"></a>网络地址logo图片</h4>]]></content>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>建站历程1</title>
    <url>/2025/05/07/%E5%BB%BA%E7%AB%99%E5%8E%86%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="历程"><a href="#历程" class="headerlink" title="历程"></a>历程</h2><p>我从去年12月左右开始建站，兜兜转转，中途放弃又捡起，放弃又捡起。</p>
<p>我原本的域名也被侵占了。</p>
<p>但我现在不由得感概，终于建好了。</p>
<p>我参考了很多文献，关于hexo，redefine，可能对大家有帮助，我放在文章最后作为查询集合</p>
<p>在建站的过程中，遇到了不少问题，其中很多其实有点记不清是如何解决的，后面完善站点的过程中再补充。</p>
<h2 id="文献集合"><a href="#文献集合" class="headerlink" title="文献集合"></a>文献集合</h2><ol>
<li><a class="link"   href="https://hexo.io/zh-cn/docs/" >Hexo-官方文档<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></li>
<li><a class="link"   href="https://redefine-docs.ohevan.com/zh" >Redefine-官方文档<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></li>
<li><a class="link"   href="https://catisnotfound.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/" >catisnotfound<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></li>
<li><a class="link"   href="https://anemone.moe/posts/ultimate-guide-to-set-up-a-basic-personal-blog/" >主要参考文献—面向零基础小白的博客搭建教程<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></li>
<li><a class="link"   href="https://chat.qwen.ai/" >最重要的还有AI<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a></li>
<li>…</li>
</ol>
<p>还有，但是记不得了，以后再补</p>
]]></content>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
</search>
